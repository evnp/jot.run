/* fakecss:/Users/evan/liveview-svelte-pwa/assets/node_modules/svelte-fa/dist/fa.esbuild-svelte-fake-css */
.svelte-fa-base {
  height: 1em;
  overflow: visible;
  transform-origin: center;
  vertical-align: -0.125em;
}
.svelte-fa-fw {
  text-align: center;
  width: 1.25em;
}
.svelte-fa-pull-left.svelte-bvo74f {
  float: left;
}
.svelte-fa-pull-right.svelte-bvo74f {
  float: right;
}
.svelte-fa-size-lg.svelte-bvo74f {
  font-size: 1.33333em;
  line-height: 0.75em;
  vertical-align: -0.225em;
}
.svelte-fa-size-sm.svelte-bvo74f {
  font-size: 0.875em;
}
.svelte-fa-size-xs.svelte-bvo74f {
  font-size: 0.75em;
}
.spin.svelte-bvo74f {
  animation: svelte-bvo74f-spin 2s 0s infinite linear;
}
.pulse.svelte-bvo74f {
  animation: svelte-bvo74f-spin 1s infinite steps(8);
}
@keyframes svelte-bvo74f-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* fakecss:/Users/evan/liveview-svelte-pwa/assets/node_modules/svelte-fa/dist/fa-layers.esbuild-svelte-fake-css */
.svelte-fa-layers.svelte-1sinijc {
  display: inline-block;
  position: relative;
}
.svelte-fa-layers.svelte-1sinijc .svelte-fa {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;
  margin: auto;
  text-align: center;
}
.svelte-fa-layers.svelte-1sinijc .svelte-fa-layers-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.svelte-fa-layers.svelte-1sinijc .svelte-fa-layers-text span {
  display: inline-block;
}
.svelte-fa-pull-left.svelte-1sinijc {
  float: left;
}
.svelte-fa-pull-right.svelte-1sinijc {
  float: right;
}
.svelte-fa-size-lg.svelte-1sinijc {
  font-size: 1.33333em;
  line-height: 0.75em;
  vertical-align: -0.225em;
}
.svelte-fa-size-sm.svelte-1sinijc {
  font-size: 0.875em;
}
.svelte-fa-size-xs.svelte-1sinijc {
  font-size: 0.75em;
}

/* fakecss:/Users/evan/liveview-svelte-pwa/assets/node_modules/svelte-fa/dist/fa-layers-text.esbuild-svelte-fake-css */
.container.svelte-1x0c3df {
  display: inline-block;
  height: auto;
}
.svelte-fa-size-lg.svelte-1x0c3df {
  font-size: 1.33333em;
  line-height: 0.75em;
  vertical-align: -0.225em;
}
.svelte-fa-size-sm.svelte-1x0c3df {
  font-size: 0.875em;
}
.svelte-fa-size-xs.svelte-1x0c3df {
  font-size: 0.75em;
}

/* fakecss:/Users/evan/liveview-svelte-pwa/assets/svelte/ExampleSvelteComponent.esbuild-svelte-fake-css */
button.svelte-1s69lyn {
  margin: 10px;
  padding: 10px;
  display: block;
  border: 1px solid #ccc;
}
/*# sourceMappingURL=data:application/json;base64, */
